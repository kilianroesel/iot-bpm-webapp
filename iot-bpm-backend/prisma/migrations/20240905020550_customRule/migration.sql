-- Custom db migration: Not generated by prisma --


-- Create equipment when machine description gets created --
CREATE OR REPLACE FUNCTION create_equipment_on_machineDescription_create()
RETURNS TRIGGER AS $$
BEGIN

    -- Insert the Equipment Description --
    IF NOT EXISTS (SELECT 1 FROM public."EquipmentDescription" WHERE "id" = NEW."mainEquipmentId") THEN
        INSERT INTO public."EquipmentDescription" ("id", "name", "updatedAt")
        VALUES (NEW."mainEquipmentId", NEW."machineName", NEW."updatedAt");
    END IF;

    RETURN NEW;
END;
$$ LANGUAGE plpgsql;

CREATE TRIGGER trg_ensure_equipment_exists
BEFORE INSERT ON public."MachineDescription"
FOR EACH ROW
EXECUTE FUNCTION create_equipment_on_machineDescription_create();


-- Delete equipment when machine description gets deleted, child equipment, etc. gets deleted via foreign key cascade --
CREATE OR REPLACE FUNCTION delete_equipment_on_machineDescription_delete()
RETURNS TRIGGER AS $$
BEGIN
    -- Delete the equipment description
    DELETE FROM public."EquipmentDescription" 
    WHERE "id" = OLD."mainEquipmentId";
    RETURN OLD;
END;
$$ LANGUAGE plpgsql;

CREATE TRIGGER trg_ensure_equipment_deletes
AFTER DELETE ON public."MachineDescription"
FOR EACH ROW
EXECUTE FUNCTION delete_equipment_on_machineDescription_delete();




