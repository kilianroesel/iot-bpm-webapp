// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
  previewFeatures = ["typedSql"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

// Model
model MachineDescription {
  id String @id @default(uuid())

  machineName                  String
  versionCsiStd                String
  versionCsiSpecific           String
  machineSoftwareVersion       String
  machineMasterSoftwareVersion String

  mainEquipmentId String               @unique @default(uuid())
  mainEquipment   EquipmentDescription @relation(name: "mainEquipment", fields: [mainEquipmentId], references: [id], onDelete: Cascade, onUpdate: Restrict)

  // Rule
  eventScopingRule EventScopingRule?
}

model EquipmentDescription {
  id   String @id @default(uuid())
  name String

  mainMachineDescription MachineDescription? @relation(name: "mainEquipment")

  statusFields StatusField[]
  events       EventDescription[]

  parentId        String?
  parentEquipment EquipmentDescription?  @relation("EquipmentToEquipment", fields: [parentId], references: [id], onDelete: Cascade, onUpdate: Restrict)
  childEquipment  EquipmentDescription[] @relation("EquipmentToEquipment")
}

model StatusField {
  id                  String               @id @default(uuid())
  name                String
  field               String
  equipment           EquipmentDescription @relation(fields: [equipmentId], references: [id], onDelete: Cascade, onUpdate: Restrict)
  equipmentId         String

  // Rule
  eventEnrichmentRule EventEnrichmentRule?
}

model EventDescription {
  id          String               @id @default(uuid())
  name        String
  field       String
  equipment   EquipmentDescription @relation(fields: [equipmentId], references: [id], onDelete: Cascade, onUpdate: Restrict)
  equipmentId String

  triggerCategory String
  triggerType     String
  value           Float?
  from            Float?
  to              Float?

  // Rule
  eventAbstractionRule EventAbstractionRule?
}


// Rules 
model EventScopingRule {
  id String @id

  machineName                  String
  versionCsiStd                String
  versionCsiSpecific           String
  machineSoftwareVersion       String
  machineMasterSoftwareVersion String

  machineDescription MachineDescription @relation(fields: [id], references: [id], onDelete: Cascade, onUpdate: Restrict)
}

model EventAbstractionRule {
  id String @id

  name            String
  field           String
  triggerCategory String
  triggerType     String
  value           Float?
  from            Float?
  to              Float?

  equipmentId String

  scopeId            String
  eventDescription   EventDescription @relation(fields: [id], references: [id], onDelete: Cascade, onUpdate: Restrict)
}

model EventEnrichmentRule {
  id String @id

  name        String
  field       String
  equipmentId String

  statusField   StatusField @relation(fields: [id], references: [id], onDelete: Cascade, onUpdate: Restrict)
}
